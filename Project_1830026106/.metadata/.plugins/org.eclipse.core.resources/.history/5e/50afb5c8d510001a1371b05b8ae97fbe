import java.util.ArrayList;

public class FinanceOffice {
	private String name;
	private ArrayList<Payer> payers;

	public FinanceOffice(String name) {
		this.name = name;
		this.payers = new ArrayList<Payer>();
	}

	public void addPayer(Payer payer) {
		this.addPayer(payer);
	}

	// calculate the total amount of debt of all the payers of the finance office
	public int totalDebt() {
		int total = 0;
		for (Payer payer : payers) {
			total = total + payer.getDebt();
		}
		return total;
	}

	// calculate the current amount of debt for this payer
	public int getDebt(String name) throws UnKnownPayerException {
		for (Payer payer : payers) {
			if (payer.getName().equalsIgnoreCase(name)) {
				return payer.getDebt();
			}
		}
		throw new UnKnownPayerException("Payer " + name + " unknown");
	}

	/**
	 * Payer pay that amount of money to that payer
	 * 
	 * @param name
	 * @param amount
	 * @throws NegativeSalaryException
	 * @throws UnKnownPayerException
	 */
	public void pay(String name, int amount) throws NegativeSalaryException, UnKnownPayerException {
		for (Payer payer : payers) {
			if (payer.getName().equalsIgnoreCase(name)) {
				payer.pay(amount);
			}
		}
		throw new UnKnownPayerException("Payer " + name + " unknown");
	}

	public static void testFinanceOffice() {
		FinanceOffice f=new FinanceOffice("UIC Finance");
		try {
			System.out.println(f.getDebt("Steve")==1000);
		} catch (UnKnownPayerException e) {
			// TODO Auto-generated catch block
			System.out.println(e.getMessage().equalsIgnoreCase("Payer Steve unknown"));
		}
		Student s1=new Student("Steve",1000);
		f.addPayer(s1);
		try {
			System.out.println(f.getDebt("Steve")==1000);
		} catch (UnKnownPayerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
